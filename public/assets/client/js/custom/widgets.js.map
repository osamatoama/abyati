{"version":3,"file":"js/custom/widgets.js","mappings":"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","sources":["webpack://metronic/../demo1/src/js/custom/widgets.js","webpack://metronic/webpack/bootstrap","webpack://metronic/webpack/startup"],"sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTWidgets = function () {\r\n    // Statistics widgets\r\n    var initStatisticsWidget3 = function() {\r\n        var charts = document.querySelectorAll('.statistics-widget-3-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light');\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 45, 32, 70, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 0.3\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: '#E4E6EF',\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 80,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function(val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                markers: {\r\n                    colors: [baseColor],\r\n                    strokeColor: [lightColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initStatisticsWidget4 = function() {\r\n        var charts = document.querySelectorAll('.statistics-widget-4-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [40, 40, 30, 30, 35, 35, 50]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 0.3\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: '#E4E6EF',\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function(val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                markers: {\r\n                    colors: [baseColor],\r\n                    strokeColor: [lightColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    // Charts widgets\r\n    var initChartsWidget1 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_1_chart\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        var initChart = function() {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');        \r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [44, 55, 57, 56, 61, 58]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [76, 85, 101, 98, 87, 105]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'bar',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: ['30%'],\r\n                        borderRadius: [6]\r\n                    },\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor, secondaryColor],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        } \r\n\r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });              \r\n    }\r\n\r\n    var initChartsWidget2 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_2_chart\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        var initChart = function() {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-warning');\r\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [44, 55, 57, 56, 61, 58]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [76, 85, 101, 98, 87, 105]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'bar',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: ['30%'],\r\n                        borderRadius: 4\r\n                    },\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor, secondaryColor],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        }\r\n\r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });\r\n    }\r\n\r\n    var initChartsWidget3 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_3_chart\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        var initChart = function() {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-info');\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-info-light');              \r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 40, 40, 90, 90, 70, 70]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: 350,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: baseColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                },\r\n                markers: {\r\n                    strokeColor: baseColor,\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        } \r\n        \r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });\r\n    }\r\n\r\n    var initChartsWidget4 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_4_chart\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        var initChart = function() {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-success');\r\n            var baseLightColor = KTUtil.getCssVariableValue('--bs-success-light');\r\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-warning');\r\n            var secondaryLightColor = KTUtil.getCssVariableValue('--bs-warning-light');        \r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [60, 50, 80, 40, 100, 60]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [70, 60, 110, 40, 50, 70]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: 350,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth'\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: labelColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor, secondaryColor],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                },\r\n                markers: {\r\n                    colors: [baseLightColor, secondaryLightColor],\r\n                    strokeColor: [baseLightColor, secondaryLightColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        } \r\n        \r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        }); \r\n    }\r\n\r\n    var initChartsWidget5 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_5_chart\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        var initChart = function() {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-info'); \r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [40, 50, 65, 70, 50, 30]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [-30, -40, -55, -60, -40, -20]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'bar',\r\n                    stacked: true,\r\n                    height: 350,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: ['12%'],\r\n                        borderRadius: [6, 6]\r\n                    },\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: -80,\r\n                    max: 80,\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor, secondaryColor],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        } \r\n        \r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });   \r\n    }\r\n\r\n    var initChartsWidget6 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_6_chart\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        var initChart = function() {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n            var baseLightColor = KTUtil.getCssVariableValue('--bs-primary-light');\r\n            var secondaryColor = KTUtil.getCssVariableValue('--bs-info');              \r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    type: 'bar',\r\n                    stacked: true,\r\n                    data: [40, 50, 65, 70, 50, 30]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    type: 'bar',\r\n                    stacked: true,\r\n                    data: [20, 20, 25, 30, 30, 20]\r\n                }, {\r\n                    name: 'Expenses',\r\n                    type: 'area',\r\n                    data: [50, 80, 60, 90, 50, 70]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    stacked: true,\r\n                    height: 350,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        stacked: true,\r\n                        horizontal: false,\r\n                        borderRadius: 4,\r\n                        columnWidth: ['12%']\r\n                    },\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    max: 120,\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor, secondaryColor, baseLightColor],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    },\r\n                    padding: {\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0\r\n                    }\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        } \r\n        \r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });    \r\n    }\r\n\r\n    var initChartsWidget7 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_7_chart\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        var initChart = function() {\r\n\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n            var color1 = KTUtil.getCssVariableValue('--bs-warning');\r\n            var color1Light = KTUtil.getCssVariableValue('--bs-warning-light');\r\n\r\n            var color2 = KTUtil.getCssVariableValue('--bs-success');\r\n            var color2Light = KTUtil.getCssVariableValue('--bs-success-light');\r\n\r\n            var color3 = KTUtil.getCssVariableValue('--bs-primary');  \r\n            var color3Light = KTUtil.getCssVariableValue('--bs-primary-light');         \r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 30, 50, 50, 35, 35]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [55, 20, 20, 20, 70, 70]\r\n                }, {\r\n                    name: 'Expenses',\r\n                    data: [60, 60, 40, 40, 30, 30]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: [color1, 'transparent', 'transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [color1, color2, color3],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                },\r\n                markers: {\r\n                    colors: [color1Light, color2Light, color3Light],\r\n                    strokeColor: [color1, color2, color3],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        } \r\n        \r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });   \r\n    }\r\n\r\n    var initChartsWidget8 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_8_chart\");\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        var initChart = function() {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n            var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n            var color1 = KTUtil.getCssVariableValue('--bs-warning');\r\n            var color1Light = KTUtil.getCssVariableValue('--bs-warning-light');\r\n\r\n            var color2 = KTUtil.getCssVariableValue('--bs-success');\r\n            var color2Light = KTUtil.getCssVariableValue('--bs-success-light');\r\n\r\n            var color3 = KTUtil.getCssVariableValue('--bs-primary');  \r\n            var color3Light = KTUtil.getCssVariableValue('--bs-primary-light');  \r\n    \r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 30, 50, 50, 35, 35]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [55, 20, 20, 20, 70, 70]\r\n                }, {\r\n                    name: 'Expenses',\r\n                    data: [60, 60, 40, 40, 30, 30]\r\n                },],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: [color1, color2, color3]\r\n                },\r\n                xaxis: {\r\n                    x: 0,\r\n                    offsetX: 0,\r\n                    offsetY: 0,\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 0,\r\n                    },\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    y: 0,\r\n                    offsetX: 0,\r\n                    offsetY: 0,\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [color1Light, color2Light, color3Light],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    padding: {\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0\r\n                    }\r\n                },\r\n                markers: {\r\n                    colors: [color1, color2, color3],\r\n                    strokeColor: [color1, color2, color3],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        } \r\n        \r\n        // Init chart\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });  \r\n    }\r\n\r\n    // Mixed widgets\r\n    var initMixedWidget2 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-2-chart');\r\n\r\n        var color;\r\n        var strokeColor;\r\n        var height;\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var options;\r\n        var chart;\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            height = parseInt(KTUtil.css(element, 'height'));\r\n            color = KTUtil.getCssVariableValue('--bs-' + element.getAttribute(\"data-kt-color\"));\r\n            strokeColor = KTUtil.colorDarken(color, 15);\r\n\r\n            options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 45, 32, 70, 40, 40, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    },\r\n                    dropShadow: {\r\n                        enabled: true,\r\n                        enabledOnSeries: undefined,\r\n                        top: 5,\r\n                        left: 0,\r\n                        blur: 3,\r\n                        color: strokeColor,\r\n                        opacity: 0.5\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 0\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [strokeColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: borderColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 80,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px',\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    },\r\n                    marker: {\r\n                        show: false\r\n                    }\r\n                },\r\n                colors: ['transparent'],\r\n                markers: {\r\n                    colors: [color],\r\n                    strokeColor: [strokeColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart = new ApexCharts(element, options);\r\n            chart.render();  \r\n        });        \r\n    }\r\n\r\n    var initMixedWidget3 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-3-chart');      \r\n        \r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 25, 45, 30, 55, 55]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });                         \r\n    }\r\n\r\n    var initMixedWidget4 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-4-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-700');\r\n\r\n            var options = {\r\n                series: [74],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    height: height,\r\n                    type: 'radialBar',\r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        hollow: {\r\n                            margin: 0,\r\n                            size: \"65%\"\r\n                        },\r\n                        dataLabels: {\r\n                            showOn: \"always\",\r\n                            name: {\r\n                                show: false,\r\n                                fontWeight: '700'\r\n                            },\r\n                            value: {\r\n                                color: labelColor,\r\n                                fontSize: \"30px\",\r\n                                fontWeight: '700',\r\n                                offsetY: 12,\r\n                                show: true,\r\n                                formatter: function (val) {\r\n                                    return val + '%';\r\n                                }\r\n                            }\r\n                        },\r\n                        track: {\r\n                            background: lightColor,\r\n                            strokeWidth: '100%'\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                stroke: {\r\n                    lineCap: \"round\",\r\n                },\r\n                labels: [\"Progress\"]\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget5 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-5-chart');\r\n\r\n        var initChart = function(chart, element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 30, 60, 25, 25, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                fill1: {\r\n                    type: 'gradient',\r\n                    opacity: 1,\r\n                    gradient: {\r\n                        type: \"vertical\",\r\n                        shadeIntensity: 0.5,\r\n                        gradientToColors: undefined,\r\n                        inverseColors: true,\r\n                        opacityFrom: 1,\r\n                        opacityTo: 0.375,\r\n                        stops: [25, 50, 100],\r\n                        colorStops: []\r\n                    }\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 65,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n            chart.self.render();   \r\n            chart.rendered = true;\r\n        };\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var chart = {\r\n                self: null,\r\n                rendered: false\r\n            };\r\n\r\n            initChart(chart, element);\r\n            \r\n            // Update chart on theme mode change\r\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n                if (chart.rendered) {\r\n                    chart.self.destroy();\r\n                }\r\n\r\n                initChart(chart, element);\r\n            });            \r\n        });        \r\n    }\r\n\r\n    var initMixedWidget6 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-6-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light' );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 25, 45, 30, 55, 55]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget7 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-7-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light');\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [15, 25, 15, 40, 20, 50]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget10 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-10-chart');\r\n\r\n        var color;\r\n        var height;\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseLightColor;\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n        var baseColor;\r\n        var options;\r\n        var chart;\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            color = element.getAttribute(\"data-kt-color\");\r\n            height = parseInt(KTUtil.css(element, 'height'));\r\n            baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n\r\n            options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [50, 60, 70, 80, 60, 50, 70, 60]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [50, 60, 70, 80, 60, 50, 70, 60]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'bar',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: ['50%'],\r\n                        borderRadius: 4\r\n                    },\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    y: 0,\r\n                    offsetX: 0,\r\n                    offsetY: 0,\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: 'solid'\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" revenue\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor, secondaryColor],\r\n                grid: {\r\n                    padding: {\r\n                        top: 10\r\n                    },\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            chart = new ApexCharts(element, options);\r\n            chart.render();      \r\n        });        \r\n    }\r\n\r\n    var initMixedWidget12 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-12-chart');\r\n\r\n        var color;\r\n        var strokeColor;\r\n        var height;\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var options;\r\n        var chart;\r\n\r\n        [].slice.call(charts).map(function(element) {            \r\n            height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [35, 65, 75, 55, 45, 60, 55]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [40, 70, 80, 60, 50, 65, 60]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'bar',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    },\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: ['30%'],\r\n                        borderRadius: 2\r\n                    }\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 1,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 100,\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: ['solid', 'solid'],\r\n                    opacity: [0.25, 1]\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    },\r\n                    marker: {\r\n                        show: false\r\n                    }\r\n                },\r\n                colors: ['#ffffff', '#ffffff'],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    },\r\n                    padding: {\r\n                        left: 20,\r\n                        right: 20\r\n                    }\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render()\r\n        });        \r\n    } \r\n\r\n    var initMixedWidget13 = function() {\r\n        var height;\r\n        var charts = document.querySelectorAll('.mixed-widget-13-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n                   \r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [15, 25, 15, 40, 20, 50]\r\n                }],\r\n                grid: {\r\n                    show: false,\r\n                    padding: {\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0\r\n                    }\r\n                },\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'gradient',\r\n                    gradient: {                        \r\n                        opacityFrom: 0.4,\r\n                        opacityTo: 0,\r\n                        stops: [20, 120, 120, 120]\r\n                    }\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: ['#FFFFFF']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: ['#ffffff'],\r\n                markers: {\r\n                    colors: [labelColor],\r\n                    strokeColor: [strokeColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget14 = function() {   \t\t\r\n\t\tvar charts = document.querySelectorAll('.mixed-widget-14-chart');  \r\n        var options;\r\n        var chart;\r\n        var height;\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            height = parseInt(KTUtil.css(element, 'height'));      \r\n            var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');      \r\n\r\n            options = {\r\n                series: [{\r\n                    name: 'Inflation',\r\n                    data: [1, 2.1, 1, 2.1, 4.1, 6.1, 4.1, 4.1, 2.1, 4.1, 2.1, 3.1, 1, 1, 2.1]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    height: height,\r\n                    type: 'bar',\r\n                    toolbar: {\r\n                        show: false\r\n                    }                             \r\n                },\r\n                grid: {\r\n                    show: false,\r\n                    padding: {\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        right: 0\r\n                    }\r\n                },                \r\n                colors: ['#ffffff'],         \r\n                plotOptions: {\r\n                    bar: {                    \r\n                        borderRadius: 2.5,\r\n                        dataLabels: {\r\n                            position: 'top', // top, center, bottom\r\n                        },\r\n                        columnWidth: '20%'                             \r\n                    }\r\n                },            \r\n                dataLabels: {\r\n                    enabled: false,\r\n                    formatter: function(val) {\r\n                        return val + \"%\";\r\n                    },\r\n                    offsetY: -20,\r\n                    style: {\r\n                        fontSize: '12px',\r\n                        colors: [\"#304758\"]\r\n                    }\r\n                },          \r\n                xaxis: {\r\n                    labels: {\r\n                        show: false,\r\n                    },\r\n                    categories: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\", \"Jan\", \"Feb\", \"Mar\"],\r\n                    position: 'top',\r\n                    axisBorder: {\r\n                        show: false\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    crosshairs: {\r\n                        show: false\r\n                    },\r\n                    tooltip: {\r\n                        enabled: false\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    show: false,\r\n                    axisBorder: {\r\n                        show: false\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                        background: labelColor\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        formatter: function(val) {\r\n                            return val + \"%\";\r\n                        }\r\n                    }                \r\n                }\t\t\r\n            };\r\n\r\n            chart = new ApexCharts(element, options);\r\n            chart.render(); \r\n        }); \r\n\t}\r\n    \r\n    var initMixedWidget16 = function() {\r\n        var element = document.getElementById(\"kt_charts_mixed_widget_16_chart\");\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            labels: [\"Total Members\"],\r\n            series: [74],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                height: height,\r\n                type: 'radialBar',\r\n                offsetY: 0\r\n            },\r\n            plotOptions: {\r\n                radialBar: {\r\n                    startAngle: -90,\r\n                    endAngle: 90,\r\n\r\n                    hollow: {\r\n                        margin: 0,\r\n                        size: \"70%\"\r\n                    },\r\n                    dataLabels: {\r\n                        showOn: \"always\",\r\n                        name: {\r\n                            show: true,\r\n                            fontSize: \"13px\",\r\n                            fontWeight: \"700\",\r\n                            offsetY: -5,\r\n                            color: KTUtil.getCssVariableValue('--bs-gray-500')\r\n                        },\r\n                        value: {\r\n                            color: KTUtil.getCssVariableValue('--bs-gray-700'),\r\n                            fontSize: \"30px\",\r\n                            fontWeight: \"700\",\r\n                            offsetY: -40,\r\n                            show: true\r\n                        }\r\n                    },\r\n                    track: {\r\n                        background: KTUtil.getCssVariableValue('--bs-primary-light'),\r\n                        strokeWidth: '100%'\r\n                    }\r\n                }\r\n            },\r\n            colors: [KTUtil.getCssVariableValue('--bs-primary')],\r\n            stroke: {\r\n                lineCap: \"round\",\r\n            }            \r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();\r\n    }\r\n\r\n    var initMixedWidget17 = function() {        \r\n        var charts = document.querySelectorAll('.mixed-widget-17-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if (!element) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var options = {\r\n                labels: [\"Total Orders\"],\r\n                series: [75],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    height: height,\r\n                    type: 'radialBar',\r\n                    offsetY: 0\r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        startAngle: -90,\r\n                        endAngle: 90,\r\n                        hollow: {\r\n                            margin: 0,\r\n                            size: \"55%\"\r\n                        },\r\n                        dataLabels: {\r\n                            showOn: \"always\",\r\n                            name: {\r\n                                show: true,\r\n                                fontSize: \"12px\",\r\n                                fontWeight: \"700\",\r\n                                offsetY: -5,\r\n                                color: KTUtil.getCssVariableValue('--bs-gray-500')\r\n                            },\r\n                            value: {\r\n                                color: KTUtil.getCssVariableValue('--bs-gray-900'),\r\n                                fontSize: \"24px\",\r\n                                fontWeight: \"600\",\r\n                                offsetY: -40,\r\n                                show: true,\r\n                                formatter: function (value) {\r\n                                    return '8,346';\r\n                                }\r\n                            }\r\n                        },\r\n                        track: {\r\n                            background: KTUtil.getCssVariableValue('--bs-gray-300'),\r\n                            strokeWidth: '100%'\r\n                        }\r\n                    }\r\n                },\r\n                colors: [KTUtil.getCssVariableValue('--bs-' + color)],\r\n                stroke: {\r\n                    lineCap: \"round\",\r\n                }            \r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        }); \r\n    }  \r\n\r\n    var initMixedWidget18 = function() {\r\n        var element = document.getElementById(\"kt_charts_mixed_widget_18_chart\");  \r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n        if ( !element ) {\r\n            return;\r\n        }\r\n\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n        var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n        var fillColor = KTThemeMode.getMode() === \"dark\" ? KTUtil.getCssVariableValue('--bs-gray-200') : '#D6D6E0';\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [30, 25, 45, 30, 55, 55]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            plotOptions: {},\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 3,\r\n                colors: [strokeColor]\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    show: false,\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: strokeColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                min: 0,\r\n                max: 60,\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [fillColor],\r\n            markers: {\r\n                colors: [fillColor],\r\n                strokeColor: [strokeColor],\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();\r\n    }\r\n\r\n    var initMixedWidget19 = function() {\r\n        var chart = {\r\n            self: null,\r\n            rendered: false\r\n        };\r\n\r\n        function initChart() {\r\n            var element = document.getElementById(\"kt_charts_mixed_widget_19_chart\");  \r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'info');\r\n            var fillColor = KTUtil.getCssVariableValue('--bs-info-light')\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 25, 45, 30, 55, 55]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [strokeColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [fillColor],\r\n                markers: {\r\n                    colors: [fillColor],\r\n                    strokeColor: [strokeColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart.self = new ApexCharts(element, options);\r\n\r\n             // Set timeout to properly get the parent elements width\r\n            setTimeout(function() {\r\n                chart.self.render();\r\n                chart.rendered = true;\r\n            }, 200);\r\n        }       \r\n\r\n        initChart();\r\n\r\n        // Update chart on theme mode change\r\n        KTThemeMode.on(\"kt.thememode.change\", function() {                \r\n            if (chart.rendered) {\r\n                chart.self.destroy();\r\n            }\r\n\r\n            initChart();\r\n        });\r\n    }\r\n\r\n    // Feeds Widgets\r\n    var initFeedWidget1 = function() {\r\n        var formEl = document.querySelector(\"#kt_forms_widget_1_form\");\r\n        var editorId = 'kt_forms_widget_1_editor';\r\n\r\n        if ( !formEl ) {\r\n            return;\r\n        }\r\n\r\n        // init editor\r\n        var options = {\r\n            modules: {\r\n                toolbar: {\r\n                    container: \"#kt_forms_widget_1_editor_toolbar\"\r\n                }\r\n            },\r\n            placeholder: 'What is on your mind ?',\r\n            theme: 'snow'\r\n        };\r\n\r\n        if (!formEl) {\r\n            return;\r\n        }\r\n\r\n        // Init editor\r\n        var editorObj = new Quill('#' + editorId, options);\r\n    }\r\n\r\n    var initFeedsWidget4 = function() {\r\n        var btn = document.querySelector('#kt_widget_5_load_more_btn');\r\n        var widget5 = document.querySelector('#kt_widget_5');        \r\n\r\n        if (btn) {\r\n            btn.addEventListener('click', function(e){\r\n                e.preventDefault();\r\n                btn.setAttribute('data-kt-indicator', 'on');\r\n\r\n                setTimeout(function() {\r\n                    btn.removeAttribute('data-kt-indicator');\r\n                    widget5.classList.remove('d-none');         \r\n                    btn.classList.add('d-none');         \r\n                    \r\n                    KTUtil.scrollTo(widget5, 200);\r\n                }, 2000);                \r\n            });\r\n        }                 \r\n    }  \r\n\r\n    // Calendar\r\n    var initCalendarWidget1 = function() {\r\n        if (typeof FullCalendar === 'undefined' || !document.querySelector('#kt_calendar_widget_1')) {\r\n            return;\r\n        }\r\n\r\n        var todayDate = moment().startOf('day');\r\n        var YM = todayDate.format('YYYY-MM');\r\n        var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\r\n        var TODAY = todayDate.format('YYYY-MM-DD');\r\n        var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\r\n\r\n        var calendarEl = document.getElementById('kt_calendar_widget_1');\r\n        var calendar = new FullCalendar.Calendar(calendarEl, {\r\n            headerToolbar: {\r\n                left: 'prev,next today',\r\n                center: 'title',\r\n                right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\r\n            },\r\n\r\n            height: 800,\r\n            contentHeight: 780,\r\n            aspectRatio: 3,  // see: https://fullcalendar.io/docs/aspectRatio\r\n\r\n            nowIndicator: true,\r\n            now: TODAY + 'T09:25:00', // just for demo\r\n\r\n            views: {\r\n                dayGridMonth: { buttonText: 'month' },\r\n                timeGridWeek: { buttonText: 'week' },\r\n                timeGridDay: { buttonText: 'day' }\r\n            },\r\n\r\n            initialView: 'dayGridMonth',\r\n            initialDate: TODAY,\r\n\r\n            editable: true,\r\n            dayMaxEvents: true, // allow \"more\" link when too many events\r\n            navLinks: true,\r\n            events: [\r\n                {\r\n                    title: 'All Day Event',\r\n                    start: YM + '-01',\r\n                    description: 'Toto lorem ipsum dolor sit incid idunt ut',\r\n                    className: \"fc-event-danger fc-event-solid-warning\"\r\n                },\r\n                {\r\n                    title: 'Reporting',\r\n                    start: YM + '-14T13:30:00',\r\n                    description: 'Lorem ipsum dolor incid idunt ut labore',\r\n                    end: YM + '-14',\r\n                    className: \"fc-event-success\"\r\n                },\r\n                {\r\n                    title: 'Company Trip',\r\n                    start: YM + '-02',\r\n                    description: 'Lorem ipsum dolor sit tempor incid',\r\n                    end: YM + '-03',\r\n                    className: \"fc-event-primary\"\r\n                },\r\n                {\r\n                    title: 'ICT Expo 2017 - Product Release',\r\n                    start: YM + '-03',\r\n                    description: 'Lorem ipsum dolor sit tempor inci',\r\n                    end: YM + '-05',\r\n                    className: \"fc-event-light fc-event-solid-primary\"\r\n                },\r\n                {\r\n                    title: 'Dinner',\r\n                    start: YM + '-12',\r\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur',\r\n                    end: YM + '-10'\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Repeating Event',\r\n                    start: YM + '-09T16:00:00',\r\n                    description: 'Lorem ipsum dolor sit ncididunt ut labore',\r\n                    className: \"fc-event-danger\"\r\n                },\r\n                {\r\n                    id: 1000,\r\n                    title: 'Repeating Event',\r\n                    description: 'Lorem ipsum dolor sit amet, labore',\r\n                    start: YM + '-16T16:00:00'\r\n                },\r\n                {\r\n                    title: 'Conference',\r\n                    start: YESTERDAY,\r\n                    end: TOMORROW,\r\n                    description: 'Lorem ipsum dolor eius mod tempor labore',\r\n                    className: \"fc-event-primary\"\r\n                },\r\n                {\r\n                    title: 'Meeting',\r\n                    start: TODAY + 'T10:30:00',\r\n                    end: TODAY + 'T12:30:00',\r\n                    description: 'Lorem ipsum dolor eiu idunt ut labore'\r\n                },\r\n                {\r\n                    title: 'Lunch',\r\n                    start: TODAY + 'T12:00:00',\r\n                    className: \"fc-event-info\",\r\n                    description: 'Lorem ipsum dolor sit amet, ut labore'\r\n                },\r\n                {\r\n                    title: 'Meeting',\r\n                    start: TODAY + 'T14:30:00',\r\n                    className: \"fc-event-warning\",\r\n                    description: 'Lorem ipsum conse ctetur adipi scing'\r\n                },\r\n                {\r\n                    title: 'Happy Hour',\r\n                    start: TODAY + 'T17:30:00',\r\n                    className: \"fc-event-info\",\r\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur'\r\n                },\r\n                {\r\n                    title: 'Dinner',\r\n                    start: TOMORROW + 'T05:00:00',\r\n                    className: \"fc-event-solid-danger fc-event-light\",\r\n                    description: 'Lorem ipsum dolor sit ctetur adipi scing'\r\n                },\r\n                {\r\n                    title: 'Birthday Party',\r\n                    start: TOMORROW + 'T07:00:00',\r\n                    className: \"fc-event-primary\",\r\n                    description: 'Lorem ipsum dolor sit amet, scing'\r\n                },\r\n                {\r\n                    title: 'Click for Google',\r\n                    url: 'http://google.com/',\r\n                    start: YM + '-28',\r\n                    className: \"fc-event-solid-info fc-event-light\",\r\n                    description: 'Lorem ipsum dolor sit amet, labore'\r\n                }\r\n            ]\r\n        });\r\n\r\n        calendar.render();\r\n    }\r\n\r\n    // Daterangepicker\r\n    var initDaterangepicker = function () {\r\n        if (!document.querySelector('#kt_dashboard_daterangepicker')) {\r\n            return;\r\n        }\r\n\r\n        var picker = $('#kt_dashboard_daterangepicker');\r\n        var start = moment();\r\n        var end = moment();\r\n\r\n        function cb(start, end, label) {\r\n            var title = '';\r\n            var range = '';\r\n\r\n            if ((end - start) < 100 || label == 'Today') {\r\n                title = 'Today:';\r\n                range = start.format('MMM D');\r\n            } else if (label == 'Yesterday') {\r\n                title = 'Yesterday:';\r\n                range = start.format('MMM D');\r\n            } else {\r\n                range = start.format('MMM D') + ' - ' + end.format('MMM D');\r\n            }\r\n\r\n            $('#kt_dashboard_daterangepicker_date').html(range);\r\n            $('#kt_dashboard_daterangepicker_title').html(title);\r\n        }\r\n\r\n        picker.daterangepicker({\r\n            direction: KTUtil.isRTL(),\r\n            startDate: start,\r\n            endDate: end,\r\n            opens: 'left',\r\n            applyClass: 'btn-primary',\r\n            cancelClass: 'btn-light-primary',\r\n            ranges: {\r\n                'Today': [moment(), moment()],\r\n                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n                'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n                'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n                'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\r\n            }\r\n        }, cb);\r\n\r\n        cb(start, end, '');\r\n    }    \r\n\r\n    // Dark mode toggler\r\n    var initDarkModeToggle = function() {\r\n        var toggle = document.querySelector('#kt_user_menu_dark_mode_toggle');\r\n        \r\n        if (toggle) {\r\n            toggle.addEventListener('click', function() {\r\n                window.location.href = this.getAttribute('data-kt-url');\r\n            });\r\n        }\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            // Daterangepicker\r\n            initDaterangepicker();\r\n            \r\n            // Dark Mode\r\n            initDarkModeToggle();\r\n\r\n            // Statistics widgets\r\n            initStatisticsWidget3();\r\n            initStatisticsWidget4();            \r\n\r\n            // Charts widgets\r\n            initChartsWidget1();\r\n            initChartsWidget2();\r\n            initChartsWidget3();\r\n            initChartsWidget4();\r\n            initChartsWidget5();\r\n            initChartsWidget6();\r\n            initChartsWidget7();\r\n            initChartsWidget8();\r\n\r\n            // Mixed widgets\r\n            initMixedWidget2();\r\n            initMixedWidget3();\r\n            initMixedWidget4();\r\n            initMixedWidget5();\r\n            initMixedWidget6();\r\n            initMixedWidget7();\r\n            initMixedWidget10();            \r\n            initMixedWidget12();\r\n            initMixedWidget13(); \r\n            initMixedWidget14();\r\n            initMixedWidget16();\r\n            initMixedWidget17();\r\n            initMixedWidget18();\r\n            initMixedWidget19();\r\n\r\n            // Feeds\r\n            initFeedWidget1();\r\n            initFeedsWidget4();\r\n\r\n            // Calendar\r\n            initCalendarWidget1();           \r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n    module.exports = KTWidgets;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTWidgets.init();\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(65157);\n"],"names":["KTWidgets","init","toggle","charts","formEl","btn","widget5","document","querySelector","picker","$","start","moment","end","daterangepicker","direction","KTUtil","isRTL","startDate","endDate","opens","applyClass","cancelClass","ranges","subtract","startOf","endOf","cb","label","title","range","format","html","initDaterangepicker","addEventListener","window","location","href","this","getAttribute","querySelectorAll","slice","call","map","element","height","parseInt","css","color","labelColor","getCssVariableValue","baseColor","lightColor","ApexCharts","series","name","data","chart","fontFamily","type","toolbar","show","zoom","enabled","sparkline","plotOptions","legend","dataLabels","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","dashArray","tooltip","formatter","undefined","offsetY","yaxis","min","max","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","val","markers","strokeColor","strokeWidth","render","initStatisticsWidget4","getElementById","self","rendered","initChart","borderColor","options","bar","horizontal","columnWidth","borderRadius","grid","strokeDashArray","lines","KTThemeMode","on","destroy","initChartsWidget1","initChartsWidget2","initChartsWidget3","baseLightColor","secondaryColor","secondaryLightColor","initChartsWidget4","stacked","initChartsWidget5","padding","top","right","bottom","left","initChartsWidget6","color1","color1Light","color2","color2Light","color3","initChartsWidget7","x","offsetX","initChartsWidget8","colorDarken","dropShadow","enabledOnSeries","blur","marker","initMixedWidget2","initMixedWidget3","radialBar","hollow","margin","size","showOn","fontWeight","track","background","lineCap","initMixedWidget4","fill1","gradient","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","colorStops","initMixedWidget5","initMixedWidget6","initMixedWidget7","initMixedWidget10","initMixedWidget12","initMixedWidget13","initMixedWidget14","startAngle","endAngle","initMixedWidget16","initMixedWidget17","fillColor","getMode","initMixedWidget18","setTimeout","initMixedWidget19","Quill","modules","container","placeholder","theme","e","preventDefault","setAttribute","removeAttribute","classList","remove","add","scrollTo","FullCalendar","todayDate","YM","YESTERDAY","clone","TODAY","TOMORROW","calendarEl","Calendar","headerToolbar","center","contentHeight","aspectRatio","nowIndicator","now","views","dayGridMonth","buttonText","timeGridWeek","timeGridDay","initialView","initialDate","editable","dayMaxEvents","navLinks","events","description","className","id","url","initCalendarWidget1","module","exports","onDOMContentLoaded","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}